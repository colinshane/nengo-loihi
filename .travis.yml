# Automatically generated by nengo-bones, do not edit this file directly
# Version: 0.1.0.dev0

language: python
python:
  - "3.6"
notifications:
  email:
    on_success: change
    on_failure: change
# cache:
#   directories:
#   - $HOME/miniconda

dist: trusty

env:
  global:
    - SCRIPT="test"
    - PYTHON_VERSION="3.6"
    - PIP_UPGRADE="true"  # always upgrade to latest version
    - PIP_UPGRADE_STRATEGY="eager"  # upgrade all dependencies
    - TEST_ARGS=""
    - COV_CORE_SOURCE=  # early start pytest-cov engine
    - COV_CORE_CONFIG=.coveragerc
    - COV_CORE_DATAFILE=.coverage.eager
    - PYTHON_VERSION="3.5.2"
    - NENGO_VERSION="nengo"

jobs:
  include:
  -
    env:
      SCRIPT="emulator"
    stage: basic
  -
    env:
      SCRIPT="static"
  -
    env:
      SCRIPT="emulator"
      NENGO_VERSION="git+https://github.com/nengo/nengo.git#egg=nengo"
    stage: advanced
  -
    env:
      SCRIPT="hardware"
      NENGO_VERSION="git+https://github.com/nengo/nengo.git#egg=nengo"
  -
    env:
      SCRIPT="docs"
      NENGO_VERSION="git+https://github.com/nengo/nengo.git#egg=nengo"

before_install:
  # export travis_terminate for use in scripts
  - export -f travis_terminate
  - export -f _travis_terminate_linux
  - export -f _travis_terminate_osx
  - export -f _travis_terminate_unix
  - export -f _travis_terminate_windows
  # install/run nengo-bones
  - pip install git+https://github.com/nengo/nengo-bones.git@docs
  - generate-bones --output-dir .ci --template-dir .ci ci-scripts
  - check-bones
  - chmod +x .ci/*.sh
  # set up conda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - if ! [[ -d $HOME/miniconda/envs/test ]]; then
      rm -rf $HOME/miniconda;
      wget -q http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      conda update -q -y conda;
      conda create -q -y -n test python=$PYTHON_VERSION pip;
    else
      conda update -q -y conda;
    fi
  - conda config --set always_yes yes --set changeps1 no
  - source activate test
  # upgrade pip
  - pip install pip
  # display environment info
  - conda info -a
  - conda list -e
  - pip freeze

install:
  - .ci/$SCRIPT.sh install
  - conda list -e
  - pip freeze

after_install:
  - .ci/$SCRIPT.sh after_install

before_script:
  - .ci/$SCRIPT.sh before_script

script:
  - .ci/$SCRIPT.sh script

before_cache:
  - .ci/$SCRIPT.sh before_cache

after_success:
  - .ci/$SCRIPT.sh after_success

after_failure:
  - .ci/$SCRIPT.sh after_failure

before_deploy:
  - .ci/$SCRIPT.sh before_deploy

after_deploy:
  - .ci/$SCRIPT.sh after_deploy

after_script:
  - .ci/$SCRIPT.sh after_script
